#!/usr/bin/perl
#
# gasmailer
#
# Simple script for sending personalised emails
#

use strict;
use warnings;

my $response    = zenity_menu();
do_send($response);

exit;

sub do_send {
    my $type = shift;

    return unless ( (defined $type) and (-d $type) );

    my $email_ref       = load_yaml("$type/email.yml");
    my $member_ref      = zenity_form("Add new member");

    use Text::Markdown::Hoedown;
    my $html            = markdown($email_ref->{Body});
    $html               =~ s/%%Dear%%/$member_ref->{Dear}/e;
    $html               =~ s/%%Comment%%/$member_ref->{Comment}/e;

    use Email::Stuffer;
    my $email = Email::Stuffer  ->to("$member_ref->{Name} <$member_ref->{Email}>")
                                ->from($email_ref->{From})
                                ->subject($email_ref->{Subject})
                                ->html_body($html);

    foreach my $filename (@{ $email_ref->{Attachments} }) {
        $email->attach_file("$type/$filename");
    }

    $email->send;
}

sub load_yaml {
    my $filename = shift;

    use File::Slurp;
    use YAML;
    my $yaml      = read_file($filename, binmode => ':utf8');
    my $yaml_ref  = Load($yaml);

    return $yaml_ref;
}

sub zenity_form {
    my $prompt = shift;

    my $response = `zenity --forms --title="GAS Mailer" --text="$prompt" --add-entry="Full name" --add-entry="Dear name" --add-entry="Email address" --add-entry="Comment"`;
    chomp($response);

    my ($name, $dear, $email, $comment) = split(/\|/, $response);
    my %member = (
        Name    => $name,
        Dear    => $dear,
        Email   => $email,
        Comment => $comment,
    );

    return(\%member);
}

sub zenity_text {
    my $prompt = shift;

    my $response = `zenity --title "GAS Mailer" --entry --text "$prompt"`; 
    chomp($response);

    return $response;
}

sub zenity_menu {
    my ($types, %types) = list_types();

    # fixme: dynamically create options from directories and configs
    my $response = `zenity  --list --width 400 --height 300 --title "GAS Mailer" --text "Select an option" --radiolist  --column "Pick" --column "Option" $types`;
    chomp($response);

    return $types{$response};
}

sub list_types {
    my @dirs = glob("*");

    my (%types, $types);
    foreach my $dir (@dirs) {
        if (-d $dir) {
            my $name        = type_name($dir);
            $types{ $name } = $dir;
            $types .= "FALSE \"$name\" ";
        }
    }

    return ($types, %types);
}

sub type_name {
    my $type        = shift;
    my $config_ref  = load_yaml("$type/email.yml");
    return $config_ref->{Subject};
}

